{"version":3,"sources":["webpack:///./src/components/sortable-list/index.js","webpack:///./src/components/notification/index.js","webpack:///./src/pages/categories/index.js","webpack:///./src/utils/fetch-json.js"],"names":["SortableList","constructor","items","event","element","target","closest","grabHandle","deleteHandle","preventDefault","this","grabListItem","remove","clientX","clientY","move","draggable","bottom","draggableBottom","getBoundingClientRect","prev","placeholder","previousElementSibling","next","nextElementSibling","defaultTopShift","before","after","scrollWhenNearWindowBorder","placeholderIndex","children","indexOf","removeDocumentListeners","replaceWith","style","classList","pointerShift","elementInitialIndex","dispatchEvent","from","to","render","initEventListeners","document","createElement","className","innerHTML","map","item","add","outerHTML","join","addEventListener","pointerdownHandler","addDocumentListeners","pointermoveHandler","pointerupHandler","removeEventListener","documentElement","clientHeight","window","scrollBy","draggableStyles","getComputedStyle","forEach","styleName","getPointerShift","append","ondragstart","left","top","x","y","type","detail","CustomEvent","bubbles","destroy","NotificationMessage","message","settings","duration","template","firstElementChild","show","parentElement","body","currentNotification","setTimeout","Page","contains","toggle","async","newOrder","listItem","index","id","dataset","weight","send","showNotification","error","wrapper","subElements","getSubElements","data","loadData","renderComponents","url","URL","process","searchParams","set","fetchJson","href","categoriesContainer","renderCategories","categories","category","categoryElement","getCategoryElement","querySelector","renderSubCategories","getCategoryTemplate","subcategories","subCategory","title","count","toggleCategoryDropdown","onOrderChange","payload","params","method","headers","JSON","stringify","Notification","querySelectorAll","reduce","result","subElement","response","fetch","toString","err","FetchError","ok","errorText","statusText","json","status","Error","super","reason","alert"],"mappings":"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","file":"categories-index-js-1.js","sourcesContent":["export default class SortableList {\n  element = null;\n  draggable = null;\n  placeholder = null;\n  pointerShift = {};\n  defaultTopShift = 5;\n\n  pointerdownHandler = event => {\n    const element = event.target.closest('.sortable-list__item');\n    const grabHandle = event.target.closest('[data-grab-handle]');\n    const deleteHandle = event.target.closest('[data-delete-handle]');\n\n    if (grabHandle) {\n      event.preventDefault();\n\n      this.grabListItem(element, event);\n    }\n\n    if (deleteHandle) {\n      element.remove();\n    }\n  };\n\n  pointermoveHandler = ({clientX, clientY}) => {\n    this.move(this.draggable, clientX, clientY);\n\n    const {bottom: draggableBottom} = this.draggable.getBoundingClientRect();\n\n    const prev = this.placeholder.previousElementSibling;\n    const next = this.placeholder.nextElementSibling;\n\n    if (prev) {\n      if (prev.getBoundingClientRect().bottom + this.defaultTopShift > draggableBottom) {\n        prev.before(this.placeholder);\n      }\n    }\n\n    if (next && next !== this.draggable) {\n      if (next.getBoundingClientRect().bottom - this.defaultTopShift < draggableBottom) {\n        next.after(this.placeholder);\n      }\n    }\n\n    this.scrollWhenNearWindowBorder(clientY);\n  };\n\n  pointerupHandler = event => {\n    const placeholderIndex = [...this.element.children].indexOf(this.placeholder);\n\n    this.removeDocumentListeners();\n\n    this.placeholder.replaceWith(this.draggable);\n\n    this.draggable.style = '';\n    this.draggable.classList.remove('sortable-list__item_dragging');\n\n    this.draggable = null;\n    this.placeholder = null;\n    this.pointerShift = {};\n\n    if (placeholderIndex !== this.elementInitialIndex) {\n      this.dispatchEvent('sortable-list-reorder', {\n        from: this.elementInitialIndex,\n        to: placeholderIndex\n      });\n    }\n  };\n\n  constructor({items = []} = {}) {\n    this.items = items;\n\n    this.render();\n    this.initEventListeners();\n  }\n\n  render() {\n    this.element = document.createElement('ul');\n    this.element.className = 'sortable-list' ;\n    this.element.innerHTML = this.items.map(item => {\n      item.classList.add('sortable-list__item');\n\n      return item.outerHTML;\n    }).join('');\n  }\n\n  initEventListeners() {\n    this.element.addEventListener('pointerdown', this.pointerdownHandler, true);\n  }\n\n  addDocumentListeners() {\n    document.addEventListener('pointermove', this.pointermoveHandler, true);\n    document.addEventListener('pointerup', this.pointerupHandler, true);\n  }\n\n  removeDocumentListeners() {\n    document.removeEventListener('pointermove', this.pointermoveHandler, true);\n    document.removeEventListener('pointerup', this.pointerupHandler, true);\n  }\n\n  scrollWhenNearWindowBorder(clientY) {\n    const windowHeight = document.documentElement.clientHeight;\n    const step = 10;\n    const indentFromWindowBorder = 20;\n\n    if (clientY >= windowHeight - indentFromWindowBorder) {\n      window.scrollBy(0, step);\n    }\n    if (clientY <= indentFromWindowBorder) {\n      window.scrollBy(0, -step);\n    }\n  }\n\n  grabListItem(element, {clientX, clientY}) {\n    const placeholder = document.createElement('li');\n    const necessaryStyles = ['height', 'width'];\n    const draggableStyles = getComputedStyle(element);\n\n    this.elementInitialIndex = [...this.element.children].indexOf(element);\n\n    necessaryStyles.forEach(styleName => {\n      placeholder['style'][styleName] = draggableStyles[styleName];\n      element['style'][styleName] = draggableStyles[styleName];\n    });\n\n    this.pointerShift = this.getPointerShift(element, clientX, clientY);\n\n    element.classList.add('sortable-list__item_dragging');\n    placeholder.className = 'sortable-list__placeholder';\n\n    element.before(placeholder);\n    this.element.append(element);\n\n    element.ondragstart = () => false;\n\n    this.move(element, clientX, clientY);\n\n    this.draggable = element;\n    this.placeholder = placeholder;\n\n    this.addDocumentListeners();\n  }\n\n  getPointerShift(draggable, clientX, clientY) {\n    const {left, top} = draggable.getBoundingClientRect();\n\n    return {\n      x: clientX - left,\n      y: clientY - top\n    };\n  }\n\n  move(element, clientX, clientY) {\n    element.style.left = clientX - this.pointerShift.x + 'px';\n    element.style.top = clientY - this.pointerShift.y + this.defaultTopShift + 'px';\n  }\n\n  dispatchEvent(type, detail) {\n    this.element.dispatchEvent(new CustomEvent(type, {\n      bubbles: true,\n      detail\n    }));\n  }\n\n  remove() {\n    if (this.element) {\n      this.element.remove();\n    }\n  }\n\n  destroy() {\n    this.remove();\n    this.element = null;\n    this.removeDocumentListeners();\n  }\n}\n","export default class NotificationMessage {\n  element = null;\n  static currentNotification = null;\n\n  constructor(message = '', settings = {\n    duration: 0,\n    type: 'error'\n  }) {\n    this.message = message;\n    this.duration = settings.duration;\n    this.type = settings.type;\n\n    this.render();\n  }\n\n  render() {\n    const element = document.createElement('div');\n\n    element.innerHTML = this.template;\n    this.element = element.firstElementChild;\n  }\n\n  get template() {\n    return `\n      <div class=\"notification ${this.type === 'success' ? 'success' : 'error'}\" style=\"--value:${this.duration / 1000}s\">\n        <div class=\"timer\"></div>\n        <div class=\"inner-wrapper\">\n          <div class=\"notification-body\">\n            ${this.message}\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  show(parentElement = document.body) {\n    if (NotificationMessage.currentNotification !== null) {\n      NotificationMessage.currentNotification.remove();\n    }\n    NotificationMessage.currentNotification = this;\n\n    this.element.classList.add('show');\n    parentElement.append(this.element);\n\n    setTimeout(() => {\n      this.remove();\n    }, this.duration);\n  }\n\n  remove () {\n    this.element.remove();\n  }\n\n  destroy() {\n    this.remove();\n  }\n}\n","import SortableList from '../../components/sortable-list/index.js';\nimport Notification from '../../components/notification/index.js';\nimport fetchJson from \"../../utils/fetch-json.js\";\n\nconst BACKEND_URL = process.env.BACKEND_URL;\n\nexport default class Page {\n  element = null;\n  subElements = {};\n\n  toggleCategoryDropdown = event => {\n    if (event.target.classList.contains('category__header')) {\n      event.target.parentElement.classList.toggle('category_open');\n    }\n  };\n\n  onOrderChange = async (event) => {\n    const newOrder = [...event.target.children].map((listItem, index) => {\n      return {\n        id: listItem.dataset.id,\n        weight: index + 1\n      };\n    });\n\n    try {\n      await this.send(newOrder);\n      this.showNotification('success', 'Category order saved');\n    } catch(error) {\n      this.showNotification('error', `Server side error! ${error}`);\n    }\n  };\n\n  async render() {\n    const wrapper = document.createElement('div');\n\n    wrapper.innerHTML = this.template;\n\n    this.element = wrapper.firstElementChild;\n    this.subElements = this.getSubElements(this.element);\n\n    const data = await this.loadData();\n\n    this.renderComponents(data);\n    this.initEventListeners();\n\n    return this.element;\n  }\n\n  async loadData() {\n    const url = new URL('api/rest/categories', BACKEND_URL);\n\n    url.searchParams.set('_sort', 'weight');\n    url.searchParams.set('_refs', 'subcategory');\n\n    return await fetchJson(url.href);\n  }\n\n  renderComponents(data) {\n    this.subElements.categoriesContainer.append(...this.renderCategories(data));\n  }\n\n  renderCategories(categories) {\n    return categories.map(category => {\n      const categoryElement = this.getCategoryElement(category);\n\n      const listWrapper = categoryElement.querySelector('[data-subcategory-list]');\n      listWrapper.append(this.renderSubCategories(category));\n\n      return categoryElement;\n    });\n  }\n\n  getCategoryElement(category) {\n    const wrapper = document.createElement('div');\n\n    wrapper.innerHTML = this.getCategoryTemplate(category);\n\n    return wrapper.firstElementChild;\n  }\n\n  renderSubCategories(category) {\n    const sortableList = new SortableList({\n      items: category.subcategories.map(subCategory => {\n        const element = document.createElement('li');\n\n        element.classList.add('categories__sortable-list-item', 'sortable-list__item');\n        element.dataset.grabHandle = '';\n        element.dataset.id = subCategory.id;\n        element.innerHTML = `<strong>${subCategory.title}</strong>\n                               <span><b>${subCategory.count}</b> products</span>`;\n\n        return element;\n      })\n    });\n\n    return sortableList.element;\n  }\n\n  get template() {\n    return `\n        <div class=\"categories\">\n          <div class=\"content__top-panel\">\n            <h1 class=\"page-title\">Categories</h1>\n          </div>\n          <div data-element=\"categoriesContainer\"></div>\n        </div>`;\n  }\n\n  getCategoryTemplate(category) {\n    return `\n        <div class=\"category category_open\" data-id=\"${category.id}\">\n          <header class=\"category__header\">\n            ${category.title}\n          </header>\n          <div class=\"category__body\">\n            <div class=\"subcategory-list\" data-subcategory-list></div>\n          </div>\n        </div>`;\n  }\n\n  initEventListeners() {\n    document.addEventListener('pointerdown', this.toggleCategoryDropdown);\n    document.addEventListener('sortable-list-reorder', this.onOrderChange);\n  }\n\n  async send(payload) {\n    const url = new URL('api/rest/subcategories', BACKEND_URL);\n    const params = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(payload)\n    };\n\n    await fetchJson(url, params);\n  }\n\n  showNotification(type, message) {\n    const notification = new Notification(message, {\n      duration: 3000,\n      type: type\n    });\n\n    notification.show();\n  }\n\n  getSubElements(element) {\n    const subElements = element.querySelectorAll('[data-element]');\n\n    return [...subElements].reduce((result, subElement) => {\n      result[subElement.dataset.element] = subElement;\n\n      return result;\n    }, {});\n  }\n\n  remove() {\n    if (this.element) {\n      this.element.remove();\n    }\n  }\n\n  destroy() {\n    this.remove();\n    this.element = null;\n    this.subElements = null;\n\n    document.removeEventListener('pointerdown', this.toggleCategoryDropdown);\n    document.removeEventListener('sortable-list-reorder', this.onOrderChange);\n  }\n}\n","// same as fetch, but throws FetchError in case of errors\r\n// status >= 400 is an error\r\n// network error / json error are errors\r\n\r\nexport default async function(url, params) {\r\n  let response;\r\n\r\n  try {\r\n    // NOTE: \"toString\" call needed for correct work of \"jest-fetch-mock\"\r\n    response = await fetch(url.toString(), params);\r\n  } catch(err) {\r\n    throw new FetchError(response, \"Network error has occurred.\");\r\n  }\r\n\r\n  let body;\r\n\r\n  if (!response.ok) {\r\n    let errorText = response.statusText; // Not Found (for 404)\r\n\r\n    try {\r\n      body = await response.json();\r\n\r\n      errorText = (body.error && body.error.message) || (body.data && body.data.error && body.data.error.message) || errorText;\r\n    } catch (error) { /* ignore failed body */ }\r\n\r\n    let message = `Error ${response.status}: ${errorText}`;\r\n\r\n    throw new FetchError(response, body, message);\r\n  }\r\n\r\n  try {\r\n    return await response.json();\r\n  } catch(err) {\r\n    throw new FetchError(response, null, err.message);\r\n  }\r\n}\r\n\r\nexport class FetchError extends Error {\r\n  name = \"FetchError\";\r\n\r\n  constructor(response, body, message) {\r\n    super(message);\r\n    this.response = response;\r\n    this.body = body;\r\n  }\r\n}\r\n\r\n// handle uncaught failed fetch through\r\nwindow.addEventListener('unhandledrejection', event => {\r\n  if (event.reason instanceof FetchError) {\r\n    alert(event.reason.message);\r\n  }\r\n});\r\n\r\n"],"sourceRoot":""}